{"version":3,"sources":["components/Card.jsx","components/Home.jsx","components/Error.jsx","components/CreateRoom.jsx","components/Room.jsx","components/Navigation.jsx","components/CreateUsername.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","className","to","this","props","link","title","is_private","subtitles","map","subtitle","key","React","Component","withRouter","useState","data","setData","useEffect","fetch","then","res","json","console","log","catch","err","rooms","room","i","id","name","description","private","isErrorShown","ShowError","text","warn","error","document","getElementById","classList","remove","errorText","innerText","HideError","add","ErrorTop","onCheckboxChange","roomPassword","privateCheckbox","disabled","checked","setAttribute","validateOnChange","length","warnText","lenghtOver","toValidate","warnElementClassName","comparison","value","warnElement","createElement","innerHTML","nextSibling","parentNode","insertBefore","appendChild","username","onSubmit","event","preventDefault","window","grecaptcha","ready","execute","action","token","name_","description_","is_private_","password_","method","headers","body","JSON","stringify","password","captcha_token","response","location","replace","autoComplete","htmlFor","type","onKeyUp","tabIndex","required","onChange","Navigation","PopUp","inputValue","func","content","placeholder","e","messagesArray","Room","socket","io","connect","roomName","href","split","pop","messages","setMessages","on","user","contentToAdd","msg","push","elem","scrollTop","scrollHeight","sendMessage","messageInput","message","emit","channel","onbeforeunload","resizeContainerMsg","resizeContainer","newHeight","innerHeight","style","height","onresize","onload","onClick","getter","chatContent","App","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.d83d0449.chunk.js","sourcesContent":["import React from 'react';\nimport { withRouter, Link } from 'react-router-dom';\n\nclass Card extends React.Component {\n    render() {\n        return (\n            <div className=\"bot-card mb-2 tr-f\" key={this.props.key}>\n                <Link to={this.props.link}>\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <h3 className=\"card-title\">{this.props.title}\n                                {this.props.is_private && <i className=\"fas fa-lock\" data-mdb-toggle=\"tooltip\" title=\"Private room\"></i>}\n                            </h3>\n                            {\n                                /* Render subtitles */\n                                this.props.subtitles &&\n                                this.props.subtitles.map(function (subtitle) {\n                                    return (<p key={subtitle} className=\"card-subtitle\">{subtitle}</p>)\n                                })\n                            }\n                        </div>\n                    </div>\n                </Link>\n            </div>\n        );\n    }\n};\n\nexport default withRouter(Card);","import React from \"react\";\nimport { withRouter, Link } from \"react-router-dom\";\nimport { useState, useEffect } from 'react';\n\nimport Card from \"./Card\";\n\nconst Home = () => {\n\n\t// Fetch API data\n\tconst [data, setData] = useState([{}]);\n\tuseEffect(() => {\n\t\tfetch(\"https://wavy-chat.herokuapp.com/api/rooms\")\n\t\t\t.then((res) => res.json())\n\t\t\t.then((data) => {\n\t\t\t\tsetData(data);\n\t\t\t\tconsole.log(\"API endpoint data retrieved.\");\n\t\t\t}).catch((err) => {\n\t\t\t\tconsole.log(\"No rooms retrieved from API endpoint.\");\n\t\t\t});\n\t}, []);\n\n\n\treturn (\n\t\t<div className=\"home\">\n\t\t\t<div className=\"container header text-center mt-5\">\n\t\t\t\t<h1 className=\"title\">Find Rooms</h1>\n\t\t\t\t<p className=\"subtitle\">Private rooms are currently not enabled. The feature will be implemented soon.</p>\n\t\t\t\t<Link to=\"/create\" className=\"btn button-md\" >Create Room</Link>\n\t\t\t</div>\n\t\t\t<div className=\"container mt-4\">\n\t\t\t\t{// Check if the API data is undefined\n\t\t\t\t\t(typeof data.rooms === \"undefined\") ? (\n\t\t\t\t\t\t<p className=\"text-center subtitle\">No rooms available...</p>\n\t\t\t\t\t) : (\n\t\t\t\t\t\tdata.rooms.map((room, i) => (\n\t\t\t\t\t\t\t<Card\n\t\t\t\t\t\t\t\tkey={i}\n\t\t\t\t\t\t\t\tlink={`/room/${room.id}`}\n\t\t\t\t\t\t\t\ttitle={room.name}\n\t\t\t\t\t\t\t\tsubtitles={[room.description]}\n\t\t\t\t\t\t\t\tis_private={room.private}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t))\n\t\t\t\t\t)}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default withRouter(Home);\n","import React from 'react';\n\nlet isErrorShown = false;\n\nexport const ShowError = (text = \"Sample error.\") => {\n    if (!isErrorShown) {\n        console.warn(\"showing error\")\n        let error = document.getElementById(\"error-top\");\n        error.classList.remove(\"d-none\");\n        let errorText = document.getElementById(\"error-top-text\");\n        errorText.innerText = text;\n        isErrorShown = !isErrorShown;\n    }\n}\n\nexport const HideError = () => {\n    if (isErrorShown) {\n        let error = document.getElementById(\"error-top\");\n        if (error) {\n            error.classList.add(\"d-none\");\n            isErrorShown = !isErrorShown;\n        }\n    }\n}\n\nexport class ErrorTop extends React.Component {\n    render() {\n        return (\n            <div className=\"error-top text-center d-none\" id=\"error-top\">\n                <p id=\"error-top-text\">{this.props.text}</p>\n            </div>\n        );\n    }\n};\n\nexport default ErrorTop;","import React from 'react';\nimport { withRouter } from 'react-router-dom';\n\nimport { ErrorTop, ShowError } from \"./Error\";\n\nconst onCheckboxChange = () => {\n    // Toggle password field\n    const roomPassword = document.getElementById(\"room-password\");\n    const privateCheckbox = document.getElementById(\"private-room-ch\");\n    roomPassword.disabled = !privateCheckbox.checked; // Toggle input disabled state\n    !roomPassword.checked ? roomPassword.setAttribute(\"required\", \"true\") : roomPassword.setAttribute(\"disabled\", \"false\");\n}\n\nconst validateOnChange = (id, length, warnText, lenghtOver = false) => {\n    const toValidate = document.getElementById(id);\n    const warnElementClassName = \"form-text\";\n    // Change comparison depending on the lengthOver parameter\n    // If lenghtOver is true, then the length of the input must be greater than the specified length\n    // If lenghtOver is false, then the length of the input must be less than the specified length\n    const comparison = lenghtOver ? toValidate.value.length > length : toValidate.value.length < length;\n\n    if (comparison) {\n        // Subtitle under the input field\n        let warnElement = document.createElement(\"div\");\n        warnElement.setAttribute(\"class\", warnElementClassName);\n        warnElement.innerHTML = warnText;\n\n        let nextSibling = toValidate.nextSibling;\n        // Check if toValidate has already a sibling\n        if (nextSibling) {\n            if (nextSibling.className !== warnElement.className) {\n                toValidate.parentNode.insertBefore(warnElement, nextSibling);\n            }\n        }\n\n        else { // If there's no sibling, create one\n            toValidate.parentNode.appendChild(warnElement);\n        }\n    }\n\n    else {\n        // If the comparison is not met. Then remove the warn text subtitle.\n        let nextSibling = toValidate.nextSibling;\n        if (nextSibling) {\n            if (nextSibling.className === warnElementClassName) {\n                nextSibling.remove();\n            }\n        }\n    }\n}\n\nfunction CreateRoom() {\n    const onSubmitForm = (event) => {\n        event.preventDefault();\n\n        // Captcha\n        window.grecaptcha.ready(function () {\n            window.grecaptcha.execute('6Lf0A2kcAAAAAL0vjtKP48OV4tdBGFStIryPOtnN', { action: 'submit' }).then(function (token) {\n                // Retrieve field values\n                let name_ = document.getElementById(\"room-name\").value;\n                let description_ = document.getElementById(\"room-description\").value;\n                let is_private_ = document.getElementById(\"private-room-ch\").checked;\n                let password_ = document.getElementById(\"room-password\").value;\n\n                // Create post request to API endpoint\n                fetch('https://wavy-chat.herokuapp.com/api/create/post', {\n                    method: 'POST',\n                    headers: { 'Content-Type': 'application/json; charset=UTF-8' },\n                    body: JSON.stringify({\n                        name: name_,\n                        description: description_,\n                        is_private: is_private_,\n                        password: password_,\n                        captcha_token: token\n                    })\n                })\n                    .then((response) => response.json()) // Convert response to JSON obj\n                    .then((data) => {\n                        console.log(`Data received: ${JSON.stringify(data)}`);\n                        if (data[200]) {\n                            // Redirect to room\n                            window.location.replace(`#/room/${data[200]}`)\n                        }\n                        else {\n                            ShowError(data[400]);\n                        }\n                    });\n            });\n        });\n    }\n\n    return (\n        <div className=\"create-room\" id=\"create-room\">\n            <ErrorTop text=\"\" />\n            <div className=\"container\">\n                <div className=\"row d-flex justify-content-center\">\n                    <div className=\"col-md-7\">\n                        <div className=\"header text-center mt-5\">\n                            <h1 className=\"title\">Create Room</h1>\n                        </div>\n                        <form className=\"form-create-room mt-5 tr-f\" onSubmit={onSubmitForm} autoComplete=\"off\">\n                            <div className=\"mb-3\">\n                                <label htmlFor=\"room-name\" className=\"form-label\">Room Name</label>\n                                <input type=\"text\" className=\"form-control\" id=\"room-name\" name=\"room-name\" aria-describedby=\"roomName\"\n                                    onKeyUp={() => validateOnChange(\"room-name\", 30, \"The name must be under 30 characters.\", true)} tabIndex=\"0\" required></input>\n                            </div>\n                            <div className=\"mb-3\">\n                                <label htmlFor=\"room-description\" className=\"form-label\">Room description</label>\n                                <input type=\"text\" className=\"form-control\" id=\"room-description\" name=\"room-description\" aria-describedby=\"roomDescripton\"\n                                    onKeyUp={() => validateOnChange(\"room-description\", 150, \"The description must be under 150 characters.\", true)} tabIndex=\"0\" required></input>\n                            </div>\n                            <div className=\"mb-3 form-check\">\n                                <input type=\"checkbox\" className=\"form-check-input\" id=\"private-room-ch\" name=\"is-private\" onChange={onCheckboxChange}></input>\n                                <label className=\"form-check-label\" htmlFor=\"private-room-ch\">Make room private</label>\n                            </div>\n                            <div className=\"mb-3\">\n                                <label htmlFor=\"room-password\" className=\"form-label\">Password</label>\n                                <input type=\"password\" className=\"form-control\" id=\"room-password\" name=\"password\"\n                                    onKeyUp={() => validateOnChange(\"room-password\", 5, \"The password must be at least 4 characters.\")} tabIndex=\"0\" disabled></input>\n                            </div>\n                            <button type=\"submit\" className=\"btn button-md g-recaptcha\" data-sitekey=\"reCAPTCHA_site_key\">Submit</button>\n                            <div id=\"password-help\" className=\"form-text\">You can't change the password once the room is created.</div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default withRouter(CreateRoom);","import React from \"react\";\r\nimport { useState } from \"react\"\r\nimport io from \"socket.io-client\";\r\nimport PopUp from \"./CreateUsername\";\r\nimport { ErrorTop, ShowError, HideError } from \"./Error\";\r\n\r\nlet username;\r\nlet messagesArray = [];\r\n\r\nconst Room = () => {\r\n\r\n    console.log(\"Function reload.\");\r\n    let endPoint = \"https://wavy-chat.herokuapp.com\"; // define endoint\r\n    let socket = io.connect(`${endPoint}`);\r\n    // Not using .at() method because Safari doesn't support it\r\n    let roomName = window.location.href.split(\"/\").pop();\r\n\r\n    const connect = (user) => {\r\n        console.log(\"Connected with: \" + user);\r\n        username = user;\r\n        socket.emit('join', { channel: roomName, username: user });\r\n    }\r\n\r\n    const [messages, setMessages] = useState(messagesArray);\r\n\r\n    socket.on('message', (data, user) => {\r\n        console.log(`Username ${data[1]} incoming message: ${data[0]}`);\r\n        let contentToAdd = { msg: data[0], user: data[1] };\r\n        setMessages([...messages, contentToAdd]);\r\n        messagesArray.push(contentToAdd);\r\n\r\n        // Scroll div on new data\r\n        var elem = document.getElementById('messages');\r\n        elem.scrollTop = elem.scrollHeight;\r\n    });\r\n\r\n    // On Click\r\n    const sendMessage = (event) => {\r\n        try {\r\n            event.preventDefault();\r\n        } catch (e) { console.warn(\"Event undefined. -- 'event.preventDefault()'\") }\r\n        let messageInput = document.getElementById(\"message-input\");\r\n        let message = messageInput.value;\r\n\r\n        if (message !== \"\" && message.length <= 5000) {\r\n            HideError();\r\n            socket.emit('message', { message: message, channel: roomName, username: username });\r\n            messageInput.value = \"\"\r\n        } else {\r\n\r\n            console.log(\"Invalid blank message\");\r\n            ShowError(\"Invalid message. Message cannot be blank or contain more than 5000 characters.\")\r\n        }\r\n    };\r\n\r\n    const chatContent = (user, messages) => {\r\n        let content = []\r\n        if (messages.length > 0) {\r\n            messages.map((getter, i) => (\r\n                content.push(\r\n                    <div key={i}>\r\n                        <span className=\"message-sender me-2\">{getter[\"user\"]}</span>\r\n                        <div className=\"mb-1\">\r\n                            <div className={getter[\"user\"] === username ?\r\n                                \"message message-from-me d-inline-block\" : \"message message-from-user d-inline-block\"}>\r\n                                <p className={getter[\"user\"] === username ?\r\n                                    \"message-text m-0 d-inline\" : \"message-text m-0 d-inline\"}>{getter[\"msg\"]}\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            ));\r\n            return content;\r\n        }\r\n    }\r\n\r\n    // Disconnect user when leaving page\r\n    window.onbeforeunload = () => {\r\n        socket.emit(\"disconnect_client\", { room: roomName, username: username });\r\n    }\r\n\r\n    const resizeContainerMsg = () => {\r\n        let resizeContainer = document.getElementById(\"messages\");\r\n        let newHeight = window.innerHeight;\r\n        newHeight = newHeight - 205;\r\n        resizeContainer.style.height = `${newHeight}px`\r\n    }\r\n\r\n    window.onresize = () => {\r\n        resizeContainerMsg();\r\n    }\r\n\r\n    window.onload = () => {\r\n        resizeContainerMsg();\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"room\">\r\n                <ErrorTop text=\"\" />\r\n                <PopUp title=\"Create a temporal username.\" subtitle=\"Other users in this room will identify you with this user.\"\r\n                    placeholder=\"Input your username!\" room={roomName} func={connect} />\r\n                <form onSubmit={sendMessage}>\r\n                    <div className=\"input-group mb-3 chat-input-container\">\r\n                        <input type=\"text\" className=\"form-control\" placeholder=\"Message\" aria-label=\"Message to send\" id=\"message-input\" name=\"message\" />\r\n                        <button className=\"input-group-text send-button tr-f\" id=\"send-button\" onClick={sendMessage}><i className=\"fa-solid fa-paper-plane tr-f\"></i></button>\r\n                    </div>\r\n                </form>\r\n                <div className=\"container\">\r\n                    <h1 className=\"title mb-3\">Chat</h1>\r\n                    <div className=\"messages\" id=\"messages\">\r\n                        {!messages.length > 0 &&\r\n                            (\r\n                                <p className=\"subtitle\">Nothing here...</p>\r\n                            )\r\n                        }\r\n                        {chatContent(username, messages)}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Room;","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Navigation = () => {\r\n\r\n    return (\r\n        <div>\r\n            <nav className=\"navbar navbar-dark\">\r\n                <div className=\"container-fluid\">\r\n                    <Link className=\"navbar-brand tr-f\" to=\"/\">\r\n                        Home\r\n                    </Link>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Navigation;","import React from 'react';\r\n\r\nimport { ErrorTop, ShowError, HideError } from \"./Error\";\r\n\r\nclass PopUp extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        try {\r\n            this.content = (\r\n                <div className=\"input-group mb-3\">\r\n                    <input type=\"text\" id=\"popup-input\" className=\"popup-input form-control\"\r\n                        placeholder={props.placeholder} />\r\n                </div>\r\n            );\r\n        } catch (e) {\r\n            ShowError(\"There was an error while running the 'CreateUsername.jsx' component!\")\r\n        }\r\n    };\r\n\r\n    onSubmit = (event) => {\r\n        event.preventDefault();\r\n        let inputValue = document.getElementById(\"popup-input\").value;\r\n        if (inputValue) {\r\n            if (inputValue.length > 50) {\r\n                ShowError(\"Username must be under 50 characters.\");\r\n                return;\r\n            }\r\n\r\n            // Create post request to API endpoint\r\n            fetch('https://wavy-chat.herokuapp.com/api/create/username', {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json; charset=UTF-8' },\r\n                body: JSON.stringify({\r\n                    username: inputValue,\r\n                    room: this.props.room\r\n                })\r\n            })\r\n                .then((response) => response.json()) // Convert response to JSON obj\r\n                .then((data) => {\r\n                    if (data[200]) {\r\n                        // Redirect to room\r\n                        HideError();\r\n                        document.getElementById(\"popup-container\").classList.add(\"d-none\");\r\n                        this.props.func(inputValue);\r\n                    }\r\n                    else {\r\n                        ShowError(data[400]);\r\n                    }\r\n                });\r\n        } else {\r\n            ShowError(\"Please input a valid username!\");\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"popup-container\">\r\n                <ErrorTop text=\"\" />\r\n                <form autoComplete=\"off\" onSubmit={this.onSubmit}>\r\n                    <div className=\"popup form-control p-5\" id=\"popup\">\r\n                        <h3 className=\"title-md mt-5 pt-3\">{this.props.title}</h3>\r\n                        <p className=\"subtitle\">{this.props.subtitle}</p>\r\n                        {this.content}\r\n                        <button type=\"submit\" className=\"btn button-sm w-100\">Submit</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\n\r\nexport default PopUp;","import React from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport { Home, CreateRoom, Navigation, Room } from \"./components\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Router>\n          <Navigation />\n          <Switch>\n            <Route path=\"/\" exact component={() => <Home />} />\n            <Route path=\"/create\" exact component={() => <CreateRoom />} />\n            <Route path=\"/room/:id\" exact component={() => <Room />} />\n          </Switch>\n        </Router>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './__globals.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}