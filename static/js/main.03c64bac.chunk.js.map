{"version":3,"sources":["components/Card.jsx","components/Home.jsx","components/Error.jsx","components/CreateRoom.jsx","components/Navigation.jsx","components/ValidateUser.jsx","message/message_parser.js","components/Consts.js","components/Room.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","className","to","this","props","link","title","is_private","subtitles","map","subtitle","key","React","Component","withRouter","endpoint","process","useState","data","setData","useEffect","axios","get","then","console","log","catch","err","error","message","rooms","room","i","id","name","description","private","isErrorShown","ShowError","text","warn","document","getElementById","classList","remove","errorText","innerText","HideError","add","ErrorTop","onCheckboxChange","roomPassword","privateCheckbox","disabled","checked","setAttribute","validateOnChange","length","warnText","lenghtOver","toValidate","warnElementClassName","comparison","value","warnElement","createElement","innerHTML","nextSibling","parentNode","insertBefore","appendChild","onSubmit","event","preventDefault","window","grecaptcha","ready","execute","action","token","name_","description_","is_private_","password_","fetch","method","headers","body","JSON","stringify","password","captcha_token","response","json","location","replace","autoComplete","type","placeholder","onKeyUp","tabIndex","required","onChange","htmlFor","Navigation","PopUp","post","username","func","Object","keys","values","content","placeholder_password","e","parseMessage","getter","user","classDiv","msg","createTextLinks_","tagName","Room","processInitialData","roomId","setState","isLoading","connect","passw","socket","emit","channel","join","io","on","contentToAdd","messages","state","elem","scrollTop","scrollHeight","sendMessage","messageInput","chatContent","push","messagesArray","href","split","pop","onbeforeunload","onresize","resizeContainerMsg","resizeContainer","newHeight","innerHeight","style","height","onClick","App","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.03c64bac.chunk.js","sourcesContent":["import React from 'react';\nimport { withRouter, Link } from 'react-router-dom';\n\nclass Card extends React.Component {\n    render() {\n        return (\n            <div className=\"bot-card mb-2 tr-f\" key={this.props.key}>\n                <Link to={this.props.link}>\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <h3 className=\"card-title\">{this.props.title}\n                                {this.props.is_private && <i className=\"fas fa-lock\" data-mdb-toggle=\"tooltip\" title=\"Private room\"></i>}\n                            </h3>\n                            {\n                                /* Render subtitles */\n                                this.props.subtitles &&\n                                this.props.subtitles.map(function (subtitle) {\n                                    return (<p key={subtitle} className=\"card-subtitle\">{subtitle}</p>)\n                                })\n                            }\n                        </div>\n                    </div>\n                </Link>\n            </div>\n        );\n    }\n};\n\nexport default withRouter(Card);","import React from \"react\";\nimport axios from \"axios\";\nimport { withRouter, Link } from \"react-router-dom\";\nimport { useState, useEffect } from 'react';\n\nimport Card from \"./Card\";\n\nconst Home = () => {\n\tconst endpoint = process.env.REACT_APP_ENDPOINT;\n\t// Fetch API data\n\tconst [data, setData] = useState([{}]);\n\tuseEffect(() => {\n\t\taxios.get(endpoint + \"/api/rooms\")\n\t\t\t.then((data) => {\n\t\t\t\tconsole.log(\"API endpoint data retrieved.\");\n\t\t\t\tif (data[\"status\"] === 200) {\n\t\t\t\t\tsetData(data[\"data\"]);\n\t\t\t\t}\n\t\t\t}).catch((err) => {\n\t\t\t\tconsole.error(err.message);\n\t\t\t\tconsole.log(\"No rooms retrieved from API endpoint.\");\n\t\t\t});\n\t}, [endpoint]);\n\n\n\treturn (\n\t\t<div className=\"home\">\n\t\t\t<div className=\"container header text-center mt-5\">\n\t\t\t\t<h1 className=\"title\">Find Rooms</h1>\n\t\t\t\t<p className=\"subtitle\">Get started by creating a room!</p>\n\t\t\t\t<Link to=\"/create\" className=\"btn button-md\" >Create Room</Link>\n\t\t\t</div>\n\t\t\t<div className=\"container mt-5\">\n\t\t\t\t{// Check if the API data is undefined\n\t\t\t\t\t(typeof data.rooms === \"undefined\") ? (\n\t\t\t\t\t\t<p className=\"text-center subtitle\">No rooms available...</p>\n\t\t\t\t\t) : (\n\t\t\t\t\t\tdata.rooms.map((room, i) => (\n\t\t\t\t\t\t\t<Card\n\t\t\t\t\t\t\t\tkey={i}\n\t\t\t\t\t\t\t\tlink={`/room/${room.id}`}\n\t\t\t\t\t\t\t\ttitle={room.name}\n\t\t\t\t\t\t\t\tsubtitles={[room.description]}\n\t\t\t\t\t\t\t\tis_private={room.private}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t))\n\t\t\t\t\t)}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default withRouter(Home);\n","import React from 'react';\n\nlet isErrorShown = false;\n\nexport const ShowError = (text = \"Sample error.\") => {\n    if (!isErrorShown) {\n        console.warn(`Showing error [${text}]`)\n        let error = document.getElementById(\"error-top\");\n        if (error === null) {\n            console.error(\"Couldn't display error!\");\n            console.error(text);\n            return;\n        }\n        error.classList.remove(\"d-none\");\n        let errorText = document.getElementById(\"error-top-text\");\n        errorText.innerText = text;\n        isErrorShown = !isErrorShown;\n    }\n}\n\nexport const HideError = () => {\n    if (isErrorShown) {\n        let error = document.getElementById(\"error-top\");\n        if (error !== null) {\n            error.classList.add(\"d-none\");\n            isErrorShown = !isErrorShown;\n        }\n    }\n}\n\nexport class ErrorTop extends React.Component {\n    render() {\n        return (\n            <div className=\"error-top text-center d-none\" id=\"error-top\">\n                <p id=\"error-top-text\">{this.props.text}</p>\n            </div>\n        );\n    }\n};\n\nexport default ErrorTop;","import React from 'react';\nimport { withRouter } from 'react-router-dom';\n\nimport { ErrorTop, ShowError } from \"./Error\";\n\nconst onCheckboxChange = () => {\n    // Toggle password field\n    const roomPassword = document.getElementById(\"room-password\");\n    const privateCheckbox = document.getElementById(\"private-room-ch\");\n    roomPassword.disabled = !privateCheckbox.checked; // Toggle input disabled state\n    !roomPassword.checked ? roomPassword.setAttribute(\"required\", \"true\") : roomPassword.setAttribute(\"disabled\", \"false\");\n}\n\nconst validateOnChange = (id, length, warnText, lenghtOver = false) => {\n    const toValidate = document.getElementById(id);\n    const warnElementClassName = \"form-text\";\n    // Change comparison depending on the lengthOver parameter\n    // If lenghtOver is true, then the length of the input must be greater than the specified length\n    // If lenghtOver is false, then the length of the input must be less than the specified length\n    const comparison = lenghtOver ? toValidate.value.length > length : toValidate.value.length < length;\n\n    if (comparison) {\n        // Subtitle under the input field\n        let warnElement = document.createElement(\"div\");\n        warnElement.setAttribute(\"class\", warnElementClassName);\n        warnElement.innerHTML = warnText;\n\n        let nextSibling = toValidate.nextSibling;\n        // Check if toValidate has already a sibling\n        if (nextSibling) {\n            if (nextSibling.className !== warnElement.className) {\n                toValidate.parentNode.insertBefore(warnElement, nextSibling);\n            }\n        }\n\n        else { // If there's no sibling, create one\n            toValidate.parentNode.appendChild(warnElement);\n        }\n    }\n\n    else {\n        // If the comparison is not met. Then remove the warn text subtitle.\n        let nextSibling = toValidate.nextSibling;\n        if (nextSibling) {\n            if (nextSibling.className === warnElementClassName) {\n                nextSibling.remove();\n            }\n        }\n    }\n}\n\nfunction CreateRoom() {\n    const onSubmitForm = (event) => {\n\n        const endpoint = process.env.REACT_APP_ENDPOINT; // Get the endpoint from env var\n\n        event.preventDefault();\n\n        // Captcha\n        window.grecaptcha.ready(function () {\n            window.grecaptcha.execute('6Lf0A2kcAAAAAL0vjtKP48OV4tdBGFStIryPOtnN', { action: 'submit' }).then(function (token) {\n                // Retrieve field values\n                let name_ = document.getElementById(\"room-name\").value;\n                let description_ = document.getElementById(\"room-description\").value;\n                let is_private_ = document.getElementById(\"private-room-ch\").checked;\n                let password_ = document.getElementById(\"room-password\").value;\n\n                // Create post request to API endpoint\n                fetch(endpoint + '/api/create/post', {\n                    method: 'POST',\n                    headers: { 'Content-Type': 'application/json; charset=UTF-8' },\n                    body: JSON.stringify({\n                        name: name_,\n                        description: description_,\n                        is_private: is_private_,\n                        password: password_,\n                        captcha_token: token\n                    })\n                })\n                    .then((response) => response.json()) // Convert response to JSON obj\n                    .then((data) => {\n                        console.log(`[CreateRoom request]: ${JSON.stringify(data)}`);\n                        if (data[200]) {\n                            // Redirect to room\n                            window.location.replace(`#/room/${data[200]}`)\n                        }\n                        else {\n                            ShowError(data[400]);\n                        }\n                    });\n            });\n        });\n    }\n\n    return (\n        <div className=\"create-room\" id=\"create-room\">\n            <ErrorTop text=\"\" />\n            <div className=\"container\">\n                <div className=\"row d-flex justify-content-center\">\n                    <div className=\"col-md-7\">\n                        <div className=\"header text-center mt-5\">\n                            <h1 className=\"title\">Create Room</h1>\n                        </div>\n                        <form className=\"form-create-room mt-5 tr-f\" onSubmit={onSubmitForm} autoComplete=\"off\">\n                            <div className=\"mb-3\">\n                                {/* <label htmlFor=\"room-name\" className=\"form-label\">Room Name</label> */}\n                                <input type=\"text\" placeholder=\"Room name\" className=\"form-control\" id=\"room-name\" name=\"room-name\" aria-describedby=\"roomName\"\n                                    onKeyUp={() => validateOnChange(\"room-name\", 30, \"The name must be under 30 characters.\", true)} tabIndex=\"0\" required></input>\n                            </div>\n                            <div className=\"mb-3\">\n                                {/* <label htmlFor=\"room-description\" className=\"form-label\">Room description</label> */}\n                                <input type=\"text\" placeholder=\"Description\" className=\"form-control\" id=\"room-description\" name=\"room-description\" aria-describedby=\"roomDescripton\"\n                                    onKeyUp={() => validateOnChange(\"room-description\", 150, \"The description must be under 150 characters.\", true)} tabIndex=\"0\" required></input>\n                            </div>\n                            <div className=\"mb-3 form-check\">\n                                <input type=\"checkbox\" className=\"form-check-input\" id=\"private-room-ch\" name=\"is-private\" onChange={onCheckboxChange}></input>\n                                <label className=\"form-check-label small\" htmlFor=\"private-room-ch\">Make room private</label>\n                            </div>\n                            <div className=\"mb-1\">\n                                {/* <label htmlFor=\"room-password\" className=\"form-label\">Password</label> */}\n                                <input type=\"password\" placeholder=\"Password\" className=\"form-control\" id=\"room-password\" name=\"password\"\n                                    onKeyUp={() => validateOnChange(\"room-password\", 5, \"The password must be at least 4 characters.\")} tabIndex=\"0\" disabled></input>\n                            </div>\n                            <div id=\"password-help\" className=\"form-text\">You can't change the password once the room is created.</div>\n                            <button type=\"submit\" className=\"btn button-md mt-3 g-recaptcha\" data-sitekey=\"reCAPTCHA_site_key\">Submit</button>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default withRouter(CreateRoom);","import React from 'react';\nimport { Link } from \"react-router-dom\";\n\nconst Navigation = () => {\n\n    return (\n        <div>\n            <nav className=\"navbar navbar-dark\">\n                <div className=\"container-fluid\">\n                    <Link className=\"navbar-brand ms-2\" to=\"/\">Wavy</Link>\n                    <Link className=\"navbar-element tr-f me-2\" to=\"/\">\n                        Home\n                    </Link>\n                </div>\n            </nav>\n        </div>\n    );\n};\n\nexport default Navigation;","import React from 'react';\nimport axios from \"axios\";\nimport { ErrorTop, ShowError, HideError } from \"./Error\";\n\nclass PopUp extends React.Component {\n    constructor(props) {\n        super(props);\n        this.endpoint = process.env.REACT_APP_ENDPOINT;\n\n        try {\n            this.content = (\n                <div className=\"input-group mb-3\">\n                    <input type=\"text\" id=\"popup-name\" className=\"popup-input form-control\"\n                        placeholder={props.placeholder} />\n                    {props.private === true &&\n                        (<input type=\"password\" id=\"popup-password\" className=\"popup-input form-control\"\n                            placeholder={props.placeholder_password} />)}\n                </div>\n            );\n        } catch (e) {\n            ShowError(\"There was an error while running the 'CreateUsername.jsx' component!\")\n        }\n    };\n\n    onSubmit = (event) => {\n        event.preventDefault();\n        const name = document.getElementById(\"popup-name\").value;\n        let password = null;\n        if (this.props.private) {\n            password = document.getElementById(\"popup-password\").value;\n        }\n        if (name) {\n            if (name.length > 50) {\n                ShowError(\"Username must be under 50 characters.\");\n                return;\n            }\n\n            // Create post request to API endpoint\n            axios.post(this.endpoint + '/api/validate/', {\n                username: name,\n                password: password,\n                room: this.props.room\n            })\n                .then((data) => {\n                    console.log(\"User Validated\")\n                    if (data[\"data\"][\"200\"] === \"Success\") {\n                        HideError();\n                        document.getElementById(\"popup-container\").classList.add(\"d-none\");\n                        // Call argument function\n                        this.props.func(name, password);\n                    }\n                    else {\n                        data = data[\"data\"]\n                        if (data[\"403\"]) ShowError(\"Invalid Password!\");\n                        else ShowError(`${Object.keys(data)}: ${Object.values(data)}`);\n                    }\n                });\n        } else {\n            ShowError(\"Please input a valid username!\");\n        }\n    }\n\n    render() {\n        return (\n            <div id=\"popup-container\">\n                <ErrorTop text=\"\" />\n                <form autoComplete=\"off\" onSubmit={this.onSubmit}>\n                    <div className=\"popup form-control p-5\" id=\"popup\">\n                        <h3 className=\"title-md mt-5 pt-3\">{this.props.title}</h3>\n                        <p className=\"subtitle\">{this.props.subtitle}</p>\n                        {this.content}\n                        <button type=\"submit\" className=\"btn button-sm w-100\">Submit</button>\n                    </div>\n                </form>\n            </div>\n        );\n    };\n};\n\n\nexport default PopUp;","import React from \"react\";\nimport Linkify from 'linkify-react';\n\nexport const parseMessage = (getter, username) => {\n    let user = getter[\"user\"];\n    let classDiv = getter[\"user\"] === username ? \"message message-from-me d-inline-block\" : \"message message-from-user d-inline-block\";\n    let msg = createTextLinks_(getter[\"msg\"]);\n\n\n    return (\n        <div>\n            <span className=\"message-sender me-2\">{user}</span>\n            <div className=\"mb-1\">\n                <div className={classDiv}>\n                    {msg}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst createTextLinks_ = (text) => {\n    // Transform plain text into a link\n    return (\n        <Linkify tagName=\"p\" className=\"message-text m-0 d-inline\">\n            {text}\n        </Linkify>\n    )\n}","const endpoint = process.env.REACT_APP_ENDPOINT; // Get the endpoint from env var\nexport default endpoint;","import React from \"react\";\nimport axios from \"axios\";\nimport io from \"socket.io-client\";\nimport PopUp from \"./ValidateUser\";\nimport { ErrorTop, ShowError, HideError } from \"./Error\";\nimport { parseMessage } from \"../message/message_parser\";\nimport endpoint from \"./Consts\"\n\nclass Room extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isLoading: true,\n            id: null,\n            private: null,\n            username: null,\n            messages: []\n        };\n\n        this.messagesArray = [];\n\n        this.socket = null;\n        // Not using .at() method because Safari doesn't support it\n        this.roomId = window.location.href.split(\"/\").pop();\n    }\n\n    componentDidMount() {\n        this.processInitialData();\n    }\n\n    componentDidUpdate() {\n        // Disconnect user when leaving page\n        window.onbeforeunload = () => {\n            this.socket.emit(\"disconnect_client\", { room: this.roomId, username: this.state.username });\n        }\n\n        // On Resize event. Calls resizeContainerMsg func \n        window.onresize = () => {\n            resizeContainerMsg();\n        }\n\n        // Resizing\n        const resizeContainerMsg = () => {\n            let resizeContainer = document.getElementById(\"messages\");\n            let newHeight = window.innerHeight;\n            newHeight = newHeight - 253;\n            resizeContainer.style.height = `${newHeight}px`\n        }\n\n        // Resize when loading\n        resizeContainerMsg();\n    }\n\n\n    // Get basic info about the room\n    // Called before the render\n    processInitialData = () => {\n        axios.get(endpoint + \"/api/room/\" + this.roomId)\n            .then((data) => {\n                // Only proceed if there was an OK response\n                if (data[\"status\"] === 200) {\n                    data = data[\"data\"][200];\n                    // Assign variables to the state\n                    this.setState({\n                        isLoading: false,\n                        id: data[\"id\"],\n                        private: data[\"private\"],\n\n                    })\n                    // Log data to console\n                    console.log(\"Premount data: \" + JSON.stringify(data));\n                } else ShowError(\"Room doesn't exist!\"); // If data response is not OK. Show error msg\n            })\n            .catch((error) => {\n                ShowError(\"Error getting the data\");\n                console.error(error);\n            });\n    }\n\n    // Connect to the socket\n    connect = (user, passw) => {\n        if (this.socket) {\n            this.setState({\n                username: user\n            });\n            this.socket.emit('join', { channel: this.roomId, username: user, password: passw });\n            console.log(\"Connected with: \" + user);\n        } else {\n            ShowError(\"Error connecting to socket!\")\n        }\n    }\n\n    // Join to socket\n    // Executed when sending the form\n    join = (user, passw) => {\n        // Fetch API data\n        axios.post(endpoint + \"/api/join\", {\n            id: this.roomId,\n            password: passw\n        })\n            .then((data) => {\n                if (data[\"data\"][200]) {\n                    console.log(\"Connected to room!\")\n                    // Connect if the server response is OK\n                    this.socket = io.connect(`${endpoint}`);\n                    this.socket.on('message', (data) => {\n                        console.log(`Username ${data[1]} incoming message: ${data[0]}`);\n                        let contentToAdd = { msg: data[0], user: data[1] };\n                        this.setState({\n                            messages: [...this.state.messages, contentToAdd]\n                        })\n\n                        // Scroll div on new data\n                        var elem = document.getElementById('messages');\n                        elem.scrollTop = elem.scrollHeight;\n                    });\n                    this.connect(user, passw);\n                }\n\n                else {\n                    ShowError(JSON.stringify(data[\"data\"]));\n                }\n            }).catch((err) => {\n                console.error(err.message);;\n            });\n    }\n\n    // Send message on click / enter\n    sendMessage = (event) => {\n        try {\n            event.preventDefault();\n        } catch (e) { console.warn(\"Event undefined: 'event.preventDefault()'\") }\n        let messageInput = document.getElementById(\"message-input\");\n        let message = messageInput.value;\n\n        if (message !== \"\" && message.length <= 5000) {\n            HideError();\n            this.socket.emit('message', { message: message, channel: this.roomId, username: this.state.username });\n            messageInput.value = \"\"\n        } else {\n            console.log(\"Invalid blank message\");\n            ShowError(\"Invalid message. Message cannot be blank or contain more than 5000 characters.\")\n        }\n    };\n\n    // Parse messages content\n    chatContent = (user, messages) => {\n        let content = []\n        if (this.state.messages.length > 0) {\n            this.state.messages.map((getter, i) => (\n                content.push(\n                    <div key={i}>\n                        {parseMessage(getter, this.state.username)}\n                    </div>\n                )\n            ));\n            return content;\n        }\n    }\n\n    render() {\n        const isLoading = this.state.isLoading;\n        if (isLoading) {\n            // Wait until the preload data is fetched\n            return false;\n        }\n        return (\n            <div>\n                <div className=\"room\">\n                    <ErrorTop text=\"\" />\n                    <PopUp title=\"Create a temporal username\" subtitle=\"Other users in this room will identify you with this user.\"\n                        placeholder=\"Input your username!\" room={this.roomId}\n                        private={this.state.private} placeholder_password=\"Room password\" func={this.join} />\n                    <form onSubmit={this.sendMessage}>\n                        <div className=\"input-group mb-3 chat-input-container\">\n                            <input type=\"text\" className=\"form-control\" placeholder=\"Message\" aria-label=\"Message to send\" id=\"message-input\" name=\"message\" />\n                            <button className=\"input-group-text send-button tr-f\" id=\"send-button\" onClick={this.sendMessage}><i className=\"fa-solid fa-paper-plane tr-f\"></i></button>\n                        </div>\n                    </form>\n                    <div className=\"container\">\n                        <h1 className=\"title mb-3 mt-5\">Chat</h1>\n                        <div className=\"messages\" id=\"messages\">\n                            {!this.state.messages.length > 0 &&\n                                (\n                                    <p className=\"subtitle\">Nothing here...</p>\n                                )\n                            }\n                            {this.chatContent(this.state.username, this.state.messages)}\n                        </div>\n                    </div>\n                </div>\n            </div >\n        );\n    }\n};\n\nexport default Room;","import React from 'react';\nimport {HashRouter as Router, Route, Switch} from 'react-router-dom';\nimport {Home, CreateRoom, Navigation, Room} from \"./components\"\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Router>\n                <Navigation/>\n                <Switch>\n                    <Route path=\"/\" exact component={() => <Home/>}/>\n                    <Route path=\"/create\" exact component={() => <CreateRoom/>}/>\n                    <Route path=\"/room/:id\" exact component={() => <Room/>}/>\n                </Switch>\n            </Router>\n        </div>\n    );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({getCLS, getFID, getFCP, getLCP, getTTFB}) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './__globals.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}